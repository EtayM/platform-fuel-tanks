<?php

return [
    'create_fuel_tank.description' => 'Creates a fuel tank.',
    'create_fuel_tank.args.account' => 'The fuel tank will be created from this wallet account.',
    'destroy_fuel_tank.description' => 'Destroy the fuel tank.',
    'destroy_fuel_tank.args.tankId' => 'The wallet address of the fuel tank.',
    'add_account.description' => 'Adds new account to the fuel tank.',
    'add_account.args.userId' => 'The wallet account to be added to the fuel tank.',
    'mutate_fuel_tank.description' => 'Apply \'mutation\' to a fuel tank.',
    'batch_add_account.description' => 'Adds new account to the fuel tank in batch.',
    'batch_add_account.args.userIds' => 'The wallet accounts that will be added to the fuel tank.',
    'remove_account.description' => 'Removes an account from the fuel tank.',
    'remove_account.args.userId' => 'The wallet account that will be removed from the fuel tank.',
    'batch_remove_account.description' => 'Removes an account from the fuel tank in batch',
    'batch_remove_account.args.userIds' => 'The wallet accounts that will be removed from the fuel tank.',
    'schedule_mutate_freeze_state.description' => 'Schedule mutating of \'is_frozen\' state that determines if fuel tank or rule set can be frozen.',
    'schedule_mutate_freeze_state.args.ruleSetId' => 'The rule set index.',
    'insert_rule_set.description' => 'Insert a new rule set for the fuel tank.',
    'remove_rule_set.description' => 'Remove a rule set from the fuel tank.',
    'remove_account_rule_data.description' => 'Remove account rule from fuel tank.',
    'remove_account_rule_data.args.userId' => 'The wallet account.',
    'force_set_consumption.description' => 'Force set the fuel tank consumption.',
    'force_set_consumption.args.totalConsumed' => 'The total consumption.',
    'force_set_consumption.args.lastResetBlock' => 'The last reset block.',
    'dispatch.description' => 'Dispatch a call using the \'tankId\' subject to the rules of \'ruleSetId\'.',
    'dispatch.args.paysRemainingFee' => 'Pays remaining fee flag.',
    'dispatch_and_touch.description' => 'Same as \'Dispatch\', but creates an account for \'origin\' if doesn\'t exist.',
];
